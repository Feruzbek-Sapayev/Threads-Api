# Generated by Django 5.2.1 on 2025-07-18 15:31

import accounts.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message="Username faqat harflar, raqamlar, nuqta (.) va pastki chiziq (_) dan iborat bo'lishi kerak. Username '.' yoki '_' bilan boshlanmasligi yoki tugamasligi va ketma-ket ikki '.' yoki '__' bo'lmasligi kerak.", regex='^(?!.*[._]{2})(?![._])[a-zA-Z0-9._]{1,30}(?<![._])$'), django.core.validators.MinLengthValidator(3, message="Username kamida 3 ta belgidan iborat bo'lishi kerak.")])),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('phone', models.CharField(max_length=13, unique=True)),
                ('fullname', models.CharField(max_length=150)),
                ('bio', models.CharField(blank=True, max_length=150, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=accounts.models.random_file_path, verbose_name='profile_picture')),
                ('link', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
